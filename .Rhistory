R <- cor(MatrizEjemplo1)
## Distancia Euclidiana
D_Euclidiana <- dist(MatrizEjemplo1)
## Distancia Manhattan
D_Manhattan <-dist(MatrizEjemplo1, method = "manhattan")
## minkowski
D_minkowski<-dist(MatrizEjemplo1, method = "minkowski")
## Distancia estadistica ( Escalada con varianza)
D_Estadistica <- dist(scale(MatrizEjemplo1))
library(StatMatch)
mahalanobis(MatrizEjemplo1, colMeans(MatrizEjemplo1), cov(MatrizEjemplo1))   # centrado en la media
library("MVA")
x <- USairpollution
cm <- colMeans(x)
S <- cov(x)
plot(qc <- qchisq((1:nrow(x) - 1/2) / nrow(x), df = 6),     # plot chi cuadrado .................
sd <- sort(d),
xlab = expression(paste(chi[6]^2, " Quantile")),
ylab = "Ordered distances", xlim = range(qc) * c(1, 1.1))
oups <- which(rank(abs(qc - sd), ties = "random") > nrow(x) - 3)
text(qc[oups], sd[oups] - 1.5, names(oups))
A <- matrix(data = c(70, 57.5, 57.5, 54.5), ncol = 2) # matriz de varianzas y covarianzas
# R= D^(1/2)*A*D^(1/2)
R <- diag(1/sqrt(diag(A))) %*% A %*% diag(1/sqrt(diag(A))) # matriz de correlaciones
library("MVA")
plab <- "Population size (1970 census) in thousands"
plot(popul ~ manu, data = USairpollution, xlab = mlab, ylab = plab)
rug(USairpollution$manu, side = 1)
layout(matrix(c(2, 0, 1, 3), nrow = 2, byrow = TRUE),
widths = c(2, 1), heights = c(1, 2), respect = TRUE)
xlim <- with(USairpollution, range(manu)) * 1.1
plot(popul ~ manu, data = USairpollution, cex.lab = 0.9,
xlab = mlab, ylab = plab, type = "n", xlim = xlim)
with(USairpollution, hist(manu, main = "", xlim = xlim))
with(USairpollution, text(manu, popul, cex = 0.6,
labels = abbreviate(row.names(USairpollution))))
abline(a = 0, b = 1)
library("MVA")
eigen(A)
outcity <- match(lab <- c("Chicago", "Detroit",
"Cleveland", "Philadelphia"), rownames(USairpollution))
x <- USairpollution
x <- USairpollution[, c("manu", "popul")]
bvbox(x, mtitle = "", xlab = mlab, ylab = plab)
with(USairpollution, cor(manu, popul))
mlab <- "Manufacturing enterprises with 20 or more workers"
with(USairpollution, boxplot(popul))
d <- apply(x, 1, function(x) t(x - cm) %*% solve(S) %*% (x - cm))   # distancia a la media.
outcity <- match(c("Chicago", "Detroit",
"Cleveland", "Philadelphia"),
rownames(USairpollution))
rug(USairpollution$popul, side = 2)
hull <- with(USairpollution, chull(manu, popul))
mahalanobis.dist(MatrizEjemplo1)
text(x$manu[outcity], x$popul[outcity], labels = lab,
cex = 0.7, pos = c(2, 2, 4, 2, 2))
with(USairpollution,
plot(manu, popul, pch = 1, xlab = mlab, ylab = plab))
## c) Obtener la Matriz S en forma vecotria
S <-var(MatrizEjemplo1)
with(USairpollution, cor(manu[-outcity], popul[-outcity]))
## canberra
D_canberra <-dist(MatrizEjemplo1, method = "canberra")
A <- matrix(data = c(9, -2, -2, 6), ncol = 2)
with(USairpollution,
polygon(manu[hull], popul[hull], density = 15, angle = 30))
ylim <- with(USairpollution, range(wind)) * c(0.95, 1)
plot(wind ~ temp, data = USairpollution,
xlab = "Average annual temperature (Fahrenheit)",
ylab = "Average annual wind speed (m.p.h.)", pch = 10,
ylim = ylim)
with(USairpollution, symbols(temp, wind, circles = SO2,
inches = 0.5, add = TRUE))
ylim <- with(USairpollution, range(wind)) * c(0.95, 1)
plot(wind ~ temp, data = USairpollution,
xlab = "Average annual temperature (Fahrenheit)",
ylab = "Average annual wind speed (m.p.h.)", pch = 10,
ylim = ylim)
with(USairpollution,
stars(USairpollution[,-c(2,5)], locations = cbind(temp, wind),
labels = NULL, add = TRUE, cex = 0.5))
mlab <- "Manufacturing enterprises with 20 or more workers"
plab <- "Population size (1970 census) in thousands"
plot(popul ~ manu, data = USairpollution, xlab = mlab, ylab = plab)
rug(USairpollution$manu, side = 1)
library("MVA")
install.packages("MVA")
library("MVA")
x <- USairpollution
mlab <- "Manufacturing enterprises with 20 or more workers"
plab <- "Population size (1970 census) in thousands"
plot(popul ~ manu, data = USairpollution, xlab = mlab, ylab = plab)
rug(USairpollution$manu, side = 1)
rug(USairpollution$popul, side = 2)
layout(matrix(c(2, 0, 1, 3), nrow = 2, byrow = TRUE),
widths = c(2, 1), heights = c(1, 2), respect = TRUE)
xlim <- with(USairpollution, range(manu)) * 1.1
plot(popul ~ manu, data = USairpollution, cex.lab = 0.9,
xlab = mlab, ylab = plab, type = "n", xlim = xlim)
with(USairpollution, text(manu, popul, cex = 0.6,
labels = abbreviate(row.names(USairpollution))))
with(USairpollution, hist(manu, main = "", xlim = xlim))
with(USairpollution, boxplot(popul))
outcity <- match(lab <- c("Chicago", "Detroit",
"Cleveland", "Philadelphia"), rownames(USairpollution))
x <- USairpollution[, c("manu", "popul")]
bvbox(x, mtitle = "", xlab = mlab, ylab = plab)
text(x$manu[outcity], x$popul[outcity], labels = lab,
cex = 0.7, pos = c(2, 2, 4, 2, 2))
with(USairpollution, cor(manu, popul))
outcity <- match(c("Chicago", "Detroit",
"Cleveland", "Philadelphia"),
rownames(USairpollution))
with(USairpollution, cor(manu[-outcity], popul[-outcity]))
hull <- with(USairpollution, chull(manu, popul))
with(USairpollution,
plot(manu, popul, pch = 1, xlab = mlab, ylab = plab))
with(USairpollution,
polygon(manu[hull], popul[hull], density = 15, angle = 30))
ylim <- with(USairpollution, range(wind)) * c(0.95, 1)
plot(wind ~ temp, data = USairpollution,
xlab = "Average annual temperature (Fahrenheit)",
ylab = "Average annual wind speed (m.p.h.)", pch = 10,
ylim = ylim)
with(USairpollution, symbols(temp, wind, circles = SO2,
inches = 0.5, add = TRUE))
ylim <- with(USairpollution, range(wind)) * c(0.95, 1)
plot(wind ~ temp, data = USairpollution,
xlab = "Average annual temperature (Fahrenheit)",
ylab = "Average annual wind speed (m.p.h.)", pch = 10,
ylim = ylim)
with(USairpollution,
stars(USairpollution[,-c(2,5)], locations = cbind(temp, wind),
labels = NULL, add = TRUE, cex = 0.5))
stars(USairpollution, cex = 0.55)
pairs(USairpollution, pch = ".", cex = 1.5)
pairs(USairpollution,
panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "grey")
}, pch = ".", cex = 1.5)
pairs(USairpollution,
panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "grey")
}, pch = ".", cex = 1.5)
epa <- function(x, y)
((x^2 + y^2) < 1) * 2/pi * (1 - x^2 - y^2)
x <- seq(from = -1.1, to = 1.1, by = 0.05)
epavals <- sapply(x, function(a) epa(a, x))
persp(x = x, y = x, z = epavals, xlab = "x", ylab = "y",
zlab = expression(K(x, y)), theta = -35, axes = TRUE,
box = TRUE)
library("KernSmooth")
CYGOB1d <- bkde2D(CYGOB1, bandwidth = sapply(CYGOB1, dpik))
plot(CYGOB1, xlab = "log surface temperature",
ylab = "log light intensity")
contour(x = CYGOB1d$x1, y = CYGOB1d$x2,
z = CYGOB1d$fhat, add = TRUE)
persp(x = CYGOB1d$x1, y = CYGOB1d$x2, z = CYGOB1d$fhat,
xlab = "log surface temperature",
ylab = "log light intensity",
zlab = "density")
#install.packages("scatterplot3d")
library("scatterplot3d")
with(USairpollution,
scatterplot3d(temp, wind, SO2, type = "h",
angle = 55))
mahalanobis(MatrizEjemplo1, colMeans(MatrizEjemplo1), cov(MatrizEjemplo1))   # centrado en la media
x <- MatrizEjemplo1
cm <- colMeans(x)
S <- cov(x)
d <- apply(x, MARGIN = 1, function(x) t(x - cm) %*% solve(S) %*% (x - cm))
###
###
install.packages(mtvnorm)
install.packages("mvtnorm")
#### Distribucion nomal multivariada ####
# d: función de densidad o de probabilidad.
# p: función de distribución
# q: función para el cálculo de cuantiles.
# r: función para simular datos con dicha distribución
#Si X sigue una distribución N(mu,sigma), entonces
# p(X=x)   Funcion de distribucion
dnorm(-1, mean=0, sd=1, log=FALSE)
# p(X<= x) Funcion de distribucion acumulada
pnorm(0.1, mean=0, sd=1, log=F)
# qa=min{x:P(X≤x)≥a} = qnomr(x,mu,sigma) # devulve el valor del cuantil (cual es el valor que me deja una probabilidad acumulada de x(parametro))
x <- c(0.25,0.5, 0.75)
qnorm(x, mean = 0, sd=1,log.p = FALSE)
# Generar numeros aleatorios de una distribucion
rnorm(100, mean = 0, sd=1)
sigma <- matrix(c(1, 1, 1, 1, 3, 2, 1, 2, 2), ncol = 3)
sigma
A <- matrix(c(2, -1, -2, 1, -2, -2), nrow = 2, byrow = T)
A
A %*% sigma %*% t(A)
## PUNTO 2
sigma <- matrix(c(1, 1, 1, 1, 3, 2, 1, 2, 2), ncol = 3)
sigma
A <-   matrix(c(2, -1, 5, -1, -2, 3), nrow = 2, byrow = T)
A
A %*% sigma %*% t(A)
## PUNTO 3
sigma2 <- matrix(c(10, 4, 4, 4, 20, 10, 4, 10, 20), ncol = 3)
sigma2
lower <- c(-1, -2, -Inf)
upper <- c(3, 4, 6)
mean <- c(-1, 2, 3)
prob <- pmvnorm(lower, upper, mean, sigma=sigma2)
prob
library(mvtnorm)
# Normal Multivariada ..................
# función mvtnorm y pmvt
library(mvtnorm)
library(mvtnorm)
prob
## PUNTO 3
sigma2 <- matrix(c(10, 4, 4, 4, 20, 10, 4, 10, 20), ncol = 3)
sigma2
lower <- c(-1, -2, -Inf)
upper <- c(3, 4, 6)
mean <- c(-1, 2, 3)
prob <- pmvnorm(lower, upper, mean, sigma=sigma2)
prob
## PUNTO 4
sigma2 <- matrix(c(7, 3, -3, 3, 6, 0, -3, 0, 5), ncol = 3)
sigma2
lower <- c(-1, -2, -Inf)
upper <- c(3, 4, 6)
mean <- c(-1, 0, -3)
prob <- pmvnorm(lower, upper, mean, sigma=sigma2)
prob
#### Pruebas de Hipotesis ####
datos <- c(355, 353, 352, 346, 345, 345, 353, 353, 344, 350)
qqnorm(datos)
require(nortest)
install.packages("nortest")
#### Pruebas de Hipotesis ####
cerveza <- c(355, 353, 352, 346, 345, 345, 353, 353, 344, 350)
#prueba de normalidad
qqnorm(cerveza)
#para prueba de normalidad
require(nortest)
ad.test(cerveza)
mean(cerveza)
var(cerveza)
sqrt(var(cerveza))
pnorm(-0.2530)
pnorm(-0.2)
pnorm(-0.02)
# p(X<= x) Funcion de distribucion acumulada
pnorm(0, mean=0, sd=1, log=F)
#Si X sigue una distribución N(mu,sigma), entonces
# p(X=x)   Funcion de distribucion
dnorm(0, mean=0, sd=1, log=FALSE)
#Si X sigue una distribución N(mu,sigma), entonces
# p(X=x)   Funcion de distribucion
plot(dnorm(0, mean=0, sd=1, log=FALSE))
#Si X sigue una distribución N(mu,sigma), entonces
# p(X=x)   Funcion de distribucion
plot(dnorm(0, mean=0, sd=1, log=FALSE))
# qa=min{x:P(X≤x)≥a} = qnomr(x,mu,sigma) # devulve el valor del cuantil (cual es el valor que me deja una probabilidad acumulada de x(parametro))
x <- c(0.25,0.5, 0.75)
qnorm(x, mean = 0, sd=1,log.p = FALSE)
# qa=min{x:P(X≤x)≥a} = qnomr(x,mu,sigma) # devulve el valor del cuantil (cual es el valor que me deja una probabilidad acumulada de x(parametro))
x <- c(0.25,0.5, 0.75)
qnorm(x, mean = 0, sd=1,log.p = FALSE)
#Si X sigue una distribución N(mu,sigma), entonces
# p(X=x)   Funcion de distribucion -> altura
plot(dnorm(0, mean=0, sd=1, log=FALSE))
# p(X<= x) Funcion de distribucion acumulada -> area
pnorm(0, mean=0, sd=1, log=F)
#Si X sigue una distribución N(mu,sigma), entonces
# p(X=x)   Funcion de distribucion -> altura
dnorm(0, mean=0, sd=1, log=FALSE)
# qa=min{x:P(X≤x)≥a} = qnomr(x,mu,sigma) # devulve el valor del cuantil (cual es el valor que me deja una probabilidad acumulada de x(parametro))
x <- c(0.25,0.5, 0.75)
qnorm(x, mean = 0, sd=1,log.p = FALSE)
# Generar numeros aleatorios de una distribucion
rnorm(100, mean = 0, sd=1)
qnorm(x, mean = 0, sd=1,log.p = FALSE)
## leyendo datos
Datosssm <- read_excel("./Tabla_Pequena_Filtrada.xlsx")
DatosFamilias <- read.csv("./Familias.csv",sep=";")
## leyendo datos
Datosssm <- read_excel("Tabla_Pequena_Filtrada.xlsx")
library(readxl)
## leyendo datos
Datosssm <- read_excel("Tabla_Pequena_Filtrada.xlsx")
# Leyendo la base de datos-------------------------------------
library(readxl)
setwd("D:/National university of Colombia/Tecnicas en aprendizaje estadistico/Trabajos/statisoft2.0")
Datosssm <- read_excel("Databases/Tabla_Pequena_Filtrada.xlsx")
#View(Tabla_Pequena_Filtrada)
#View(Datosssm)
## Dimension de la base de datos...........................................
dim(Datosssm)
summary(Datosssm)
## Verifiquemos los datos faltantes........................................
apply(Datosssm, 2, function(x) sum(is.na(x)))
## Escojamos las variables que esten completas.........................
Datosssm2 <- Datosssm[,colSums(is.na(Datosssm))==0]
Datosssm2 <- Datosssm2[,-c(1,2)]
apply(Datosssm2, 2, function(x) sum(is.na(x)))
dim(Datosssm2)
names(Datosssm2)
dim(Datosssm2)   # 901 resgistro correpondientes a cada madre soltera y 25 variables
str(Datosssm2)
summary(Datosssm2$P1895)
library(ggplot2)
bar <- table(Datosssm2$P1895,Datosssm2$P6040 )
bar <- as.data.frame(bar)
tail(bar)
data=data.frame(Nivel_de_Satisfaccion = bar$Var1 , Edad = bar$Var2, Frecuencia= bar$Freq)
View(data)
#pdf(file = "barras2.pdf", height = 4.5, width = 6.5)
ggplot(data, aes(x=Nivel_de_Satisfaccion, y=Frecuencia)) +
ggtitle ("Distribución del nivel de satisfacción de las madres solteras")+
geom_bar(stat = "identity", fill="steelblue")+
geom_text(aes(label=bar$Freq), vjust=1.6, color="white", size=3.5)+
theme_minimal()
#Datosssm2$P1895[Datosssm2$P1895==8]
pdf(file= "D:/boxplot1.pdf", height = 4.5, width = 6.6)
barplot(Datosssm2$N_HIJOS)
table(Datosssm2$N_HIJOS)
plot(table(Datosssm2$N_HIJOS))
barplot(table(Datosssm2$N_HIJOS))
barplot(table(Datosssm2$N_HIJOS), xlab = "Número de hijos")
barplot(table(Datosssm2$N_HIJOS), xlab = "Número de hijos", ylab = "cantidad")
pdf(file = "barrasnumerodehijos.pdf", height = 4.5, width = 6.5)
barplot(table(Datosssm2$N_HIJOS), xlab = "Número de hijos", ylab = "cantidad")
dev.off()
table(Datosssm2$N_HIJOS
table(Datosssm2$N_HIJOS)
Datosssm2$P5502
table(Datosssm2$P5502)
pdf(file = "barrasnumerodenietos.pdf", height = 4.5, width = 6.5)
barplot(table(Datosssm2$N_NIETOS), xlab = "Número de hijos", ylab = "cantidad")
dev.off()
table(Datosssm2$N_NIETOS)
barplot(table(Datosssm2$N_NIETOS), xlab = "Número de nietos", ylab = "cantidad")
pdf(file = "barrasnumerodenietos1.pdf", height = 4.5, width = 6.5)
barplot(table(Datosssm2$N_NIETOS), xlab = "Número de nietos", ylab = "cantidad")
dev.off()
Datosssm2$P1083S3
table(Datosssm2$P1083S3)
barplot(table(Datosssm2$P1083S3))
table(Datosssm2$P1083S3)
barplot(table(Datosssm2$P1083S3), col = c("blue", "red")
barplot(table(Datosssm2$P1083S3), col = c("blue", "red"))
barplot(table(Datosssm2$P1083S3), col = c("blue", "red"))
barplot(table(Datosssm2$P1083S3), col = c("blue", "red"), names.arg = c("uno", "dos"))
barplot(table(Datosssm2$P1083S3), col = c("blue", "red"), names.arg = c("NO", "SI"))
barplot(table(Datosssm2$P1083S3), col = c("blue", "red"), names.arg = c("NO", "SI"), xlab = Uso de redes sociale)
barplot(table(Datosssm2$P1083S3), col = c("cornflowerblue","brown1"), names.arg = c("NO", "SI"), xlab = "Uso de redes sociale", ylab = "cantidad")
barplot(table(Datosssm2$P1083S3), col = c("brown1", "cornflowerblue"), names.arg = c("NO", "SI"), xlab = "Uso de redes sociales", ylab = "cantidad")
pdf(file = "usoderedes.pdf", height = 4.5, width = 6.5)
barplot(table(Datosssm2$P1083S3), col = c("brown1", "cornflowerblue"), names.arg = c("NO", "SI"), xlab = "Uso de redes sociales", ylab = "cantidad")
dev.off()
Datosssm2$P5502
ggplot(data = data, aes(x=Edad, y= Frecuencia, fill=Nivel_de_Satisfaccion))+
geom_bar(stat = "identity")+
scale_fill_manual(values=c("darkgreen", "purple","black"))
ggplot(data = data, aes(x=Edad, y= Frecuencia, fill=Nivel_de_Satisfaccion)) +
geom_bar(stat="identity", position=position_dodge()) +
scale_fill_manual(values=c("darkgreen", "purple","black"))
ggplot(data = data, aes(x=Edad, y= Frecuencia, fill=Nivel_de_Satisfaccion)) +
geom_bar(stat="identity", position=position_fill()) +
scale_fill_manual(values=c("darkgreen", "purple","black"))
ggplot(data = data, aes(x=Edad, y= Frecuencia, fill=Nivel_de_Satisfaccion)) +
geom_bar(stat="identity", position=position_stack()) +
scale_fill_manual(values=c("darkgreen", "purple","black"))
ggplot(data = data, aes(x=Edad, y= Frecuencia, fill=Nivel_de_Satisfaccion)) +
geom_bar(stat="identity") +
scale_fill_manual(values=c("darkgreen", "purple","black"))
#Datosssm2$P6020 <- factor(Datosssm2$P6020, levels = c("2"))     ## sexo
Datosssm2$P5502 <- factor(Datosssm2$P5502)   ## autualmente .. 3 viuda, 5 soltera
#Datosssm2$P6081 <- factor(Datosssm2$P6081)  # padre vive en el hogar
#Datosssm2$P6083 <- factor(Datosssm2$P6083) # la madre vive en este hogar
Datosssm2$P6080 <- factor(Datosssm2$P6080) # a que cultura pertenece
Datosssm2$P1896 <- factor(Datosssm2$P1896) # satisfaccion con el ingreso
Datosssm2$P1897 <- factor(Datosssm2$P1897) # satisfaccion con la salud
Datosssm2$P1898 <- factor(Datosssm2$P1898) # satisfecho con el nivel de seguridad
Datosssm2$P1899 <- factor(Datosssm2$P1899) # satisfecho con el trabajo
Datosssm2$P1901 <- factor(Datosssm2$P1901) # feliz el dia de ayer
Datosssm2$P1902 <- factor(Datosssm2$P1902) # tranquilo el dia de ayer
Datosssm2$P1903 <- factor(Datosssm2$P1903) # preocupado el dia de ayer
Datosssm2$P1904 <- factor(Datosssm2$P1904) # triste el dia de ayer
Datosssm2$P1905 <- factor(Datosssm2$P1905) # las cosas que hace en su vida valen la pena?
Datosssm2$P1910 <- factor(Datosssm2$P1910) # utiliza _____ computador de escritorio (en cualquier lugar)?
Datosssm2$P1911 <- factor(Datosssm2$P1911) # utiliza _____ portatil (en cualquier lugar)?
Datosssm2$P1912 <- factor(Datosssm2$P1912) # utiliza _____ tablet (en cualquier lugar)?
Datosssm2$P1084 <- factor(Datosssm2$P1084) # utiliza _____ intenet ?
Datosssm2$P1083S3 <- factor(Datosssm2$P1083S3) # utiliza _____ redes sociales ?
Datosssm2$P1895 <- factor(Datosssm2$P1895) # radio
Datosssm2$P1082 <- factor(Datosssm2$P1082) # utiliza _____ celular ?
boxplot(Datosssm2$P1895, main = "Diagrama de caja de Nivel de satisfacción de las madres solteras")
h <- table(Datosssm2$P1895)
barplot(h, main = "Distribución del nivel de satisfación de las madres solteras")
vect <-  as.matrix(Datosssm2$P1895)
barplot(Datosssm2$P1895, main="Car Distribution",
xlab="Number of Gears")
## Hagamos nuestro primer modelo con lm (minimos cuadrados)
mod0 <- lm(P1895~P6040+P5502+P6080+P1896+P1897+P1898+P1899+P1901+P1902+P1903+P1904+P1905+N_HIJOS+N_NIETOS+P1910+P1911+P1912+P1084+P1083S3+P1082, Datosssm2)
summary(mod0)
# Leyendo la base de datos-------------------------------------
library(readxl)
Datosssm <- read_excel("Databases/Tabla_Pequena_Filtrada.xlsx")
#View(Tabla_Pequena_Filtrada)
#View(Datosssm)
## Dimension de la base de datos...........................................
dim(Datosssm)
summary(Datosssm)
names(Datosssm2)
## Escojamos las variables que esten completas.........................
Datosssm2 <- Datosssm[,colSums(is.na(Datosssm))==0]
Datosssm2 <- Datosssm2[,-c(1,2)]
names(Datosssm2)
dim(Datosssm2)
Datosssm2 <-  as.data.frame(Datosssm2)
apply(Datosssm2, 2, function(x) class(x))
apply(Datosssm2, 2, function(x) sum(is.na(x)))
## Verifiquemos los datos faltantes........................................
apply(Datosssm, 2, function(x) sum(is.na(x)))
#Datosssm2$P6020 <- factor(Datosssm2$P6020, levels = c("2"))     ## sexo
Datosssm2$P5502 <- factor(Datosssm2$P5502)   ## autualmente .. 3 viuda, 5 soltera
#Datosssm2$P6081 <- factor(Datosssm2$P6081)  # padre vive en el hogar
#Datosssm2$P6083 <- factor(Datosssm2$P6083) # la madre vive en este hogar
Datosssm2$P6080 <- factor(Datosssm2$P6080) # a que cultura pertenece
Datosssm2$P1896 <- factor(Datosssm2$P1896) # satisfaccion con el ingreso
Datosssm2$P1897 <- factor(Datosssm2$P1897) # satisfaccion con la salud
Datosssm2$P1898 <- factor(Datosssm2$P1898) # satisfecho con el nivel de seguridad
Datosssm2$P1899 <- factor(Datosssm2$P1899) # satisfecho con el trabajo
Datosssm2$P1901 <- factor(Datosssm2$P1901) # feliz el dia de ayer
Datosssm2$P1902 <- factor(Datosssm2$P1902) # tranquilo el dia de ayer
Datosssm2$P1904 <- factor(Datosssm2$P1904) # triste el dia de ayer
Datosssm2$P1905 <- factor(Datosssm2$P1905) # las cosas que hace en su vida valen la pena?
Datosssm2$P1903 <- factor(Datosssm2$P1903) # preocupado el dia de ayer
Datosssm2$P1910 <- factor(Datosssm2$P1910) # utiliza _____ computador de escritorio (en cualquier lugar)?
Datosssm2$P1912 <- factor(Datosssm2$P1912) # utiliza _____ tablet (en cualquier lugar)?
Datosssm2$P1911 <- factor(Datosssm2$P1911) # utiliza _____ portatil (en cualquier lugar)?
Datosssm2$P1084 <- factor(Datosssm2$P1084) # utiliza _____ intenet ?
Datosssm2$P1083S3 <- factor(Datosssm2$P1083S3) # utiliza _____ redes sociales ?
Datosssm2$P1082 <- factor(Datosssm2$P1082) # utiliza _____ celular ?
boxplot(Datosssm2$P1895, main = "Diagrama de caja de Nivel de satisfacción de las madres solteras")
## Hagamos nuestro primer modelo con lm (minimos cuadrados)
mod0 <- lm(P1895~P6040+P5502+P6080+P1896+P1897+P1898+P1899+P1901+P1902+P1903+P1904+P1905+N_HIJOS+N_NIETOS+P1910+P1911+P1912+P1084+P1083S3+P1082, Datosssm2)
summary(mod0)
## Hagamos nuestro primer modelo con lm (minimos cuadrados)
mod0 <- lm(P1895~P6040+P5502+P6080+P1896+P1897+P1898+P1899+P1901+P1902+P1903+P1904+P1905+N_HIJOS+N_NIETOS+P1910+P1911+P1912+P1084+P1083S3+P1082, Datosssm2)
# Leyendo la base de datos-------------------------------------
library(readxl)
Datosssm <- read_excel("Databases/Tabla_Pequena_Filtrada.xlsx")
## Escojamos las variables que esten completas.........................
Datosssm2 <- Datosssm[,colSums(is.na(Datosssm))==0]
Datosssm2 <- Datosssm2[,-c(1,2)]
apply(Datosssm2, 2, function(x) sum(is.na(x)))
names(Datosssm2)
dim(Datosssm2)
Datosssm2 <-  as.data.frame(Datosssm2)
apply(Datosssm2, 2, function(x) class(x))
#Datosssm2$P6020 <- factor(Datosssm2$P6020, levels = c("2"))     ## sexo
Datosssm2$P5502 <- factor(Datosssm2$P5502)   ## autualmente .. 3 viuda, 5 soltera
#Datosssm2$P6081 <- factor(Datosssm2$P6081)  # padre vive en el hogar
#Datosssm2$P6083 <- factor(Datosssm2$P6083) # la madre vive en este hogar
Datosssm2$P6080 <- factor(Datosssm2$P6080) # a que cultura pertenece
Datosssm2$P1896 <- factor(Datosssm2$P1896) # satisfaccion con el ingreso
Datosssm2$P1898 <- factor(Datosssm2$P1898) # satisfecho con el nivel de seguridad
Datosssm2$P1901 <- factor(Datosssm2$P1901) # feliz el dia de ayer
Datosssm2$P1902 <- factor(Datosssm2$P1902) # tranquilo el dia de ayer
Datosssm2$P1903 <- factor(Datosssm2$P1903) # preocupado el dia de ayer
Datosssm2$P1905 <- factor(Datosssm2$P1905) # las cosas que hace en su vida valen la pena?
Datosssm2$P1910 <- factor(Datosssm2$P1910) # utiliza _____ computador de escritorio (en cualquier lugar)?
Datosssm2$P1911 <- factor(Datosssm2$P1911) # utiliza _____ portatil (en cualquier lugar)?
Datosssm2$P1082 <- factor(Datosssm2$P1082) # utiliza _____ celular ?
h <- table(Datosssm2$P1895)
vect <-  as.matrix(Datosssm2$P1895)
## Hagamos nuestro primer modelo con lm (minimos cuadrados)
mod0 <- lm(P1895~P6040+P5502+P6080+P1896+P1897+P1898+P1899+P1901+P1902+P1903+P1904+P1905+N_HIJOS+N_NIETOS+P1910+P1911+P1912+P1084+P1083S3+P1082, Datosssm2)
Datosssm2$P1084 <- factor(Datosssm2$P1084) # utiliza _____ intenet ?
Datosssm2$P1912 <- factor(Datosssm2$P1912) # utiliza _____ tablet (en cualquier lugar)?
barplot(h, main = "Distribución del nivel de satisfación de las madres solteras")
Datosssm2$P1083S3 <- factor(Datosssm2$P1083S3) # utiliza _____ redes sociales ?
Datosssm2$P1897 <- factor(Datosssm2$P1897) # satisfaccion con la salud
boxplot(Datosssm2$P1895, main = "Diagrama de caja de Nivel de satisfacción de las madres solteras")
barplot(Datosssm2$P1895, main="Car Distribution",
xlab="Number of Gears")
Datosssm2$P1904 <- factor(Datosssm2$P1904) # triste el dia de ayer
Datosssm2$P1899 <- factor(Datosssm2$P1899) # satisfecho con el trabajo
summary(mod0)
cor(Datosssm2, mod0$fitted.values)
cor(Datosssm2$P1895, mod0$fitted.values)
plot(Datosssm2$P1895, mod0$fitted.values)
plot(Datosssm2$P1895, mod0$fitted.values)
cor(Datosssm2$P1895, mod0$fitted.values)
mse(Datosssm2$P1895, mod0$fitted.values)
install.packages("hydroGOF")
library("hydroGOF")
mse(mod0)
mse(Datosssm2$P1895, mod0$fitted.value)
library("hydroGOF")
mse(Datosssm2$P1895, mod0$fitted.value)
library(gamlss)
library("gamlss")
install.packages("gamlss")
require("gamlss")
library("gamlss")
install.packages("gamlss")
library("gamlss")
AIC(mod0)
summary(mod0)
